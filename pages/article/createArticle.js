import { useState, useEffect, useRef } from 'react';
import scss from '@/pages/article/createArticle.module.scss'
import axios from 'axios';
import Editor from './editor';
import Head from 'next/head';
import DefaultLayout from '@/components/layout/default';
import { useRouter } from 'next/router';


export default function CreateArticle() {
  const [title, setTitle] = useState('')
  const [content, setContent] = useState('')
  const [sortOptions, setSortOptions] = useState([])
  const [selectedSort, setSelectedSort] = useState('0')


  useEffect(() => {
    fetch('http://localhost:3001/api/sort')
      .then(response => response.json())
      .then(data => {
        if (data.status === 'success') {
          setSortOptions(data.sorts)
        }
      }).catch(error => console.log(error.message))
  }, [])

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      // 從 content 中提取所有的 imageId
      const imageIds = Array.from(content.matchAll(/imageId=(\d+)/g)).map(match => parseInt(match[1]));

      const response = await axios.post('http://localhost:3001/api/createArticle', { title, content, sort: selectedSort, imageIds });
      console.log('Article created:', response.data)
      alert('文章發表成功')
      // 可以在這裡加入成功提示或重定向
    } catch (error) {
      console.error('Error creating article:', error)
      // 可以在這裡加入錯誤處理
    }
  };

  return (
    <>
      <Head>
        <title>發表文章</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={scss.mainbg}>
        <div className={`container ${scss.creatForm}`}>
          <div className={scss.bread}>
            <h4>home/討論區/發表文章</h4>
          </div>
          <form onSubmit={handleSubmit} className={` ${scss.formArea}`}>
            <input
              className={scss.artiTitle}
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              placeholder="文章標題"
              required
            />
            <select className={scss.artiSort} value={selectedSort} onChange={(e) => setSelectedSort(e.target.value)} required>
              <option value="0">選擇分類</option>
              {sortOptions.map(sortitem => (
                <option key={sortitem.id} value={sortitem.id}>{sortitem.sort}</option>
              ))}
            </select>
            <Editor content={content} setContent={setContent} editorHei="400px" />
            <div>
              <button className={scss.postBtn} type="submit">發布文章</button>
            </div>
          </form>
        </div>

      </div>

    </>

  );
}

CreateArticle.layout = DefaultLayout;